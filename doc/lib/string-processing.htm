<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>String processing</title>
  <link href="../css/main.css" rel="stylesheet">
  <script src="../js/moss-syntax.js"></script>
</head>
<body>

<table class="navigation">
<tr><td><b>&uarr;</b> <a href="toc.htm">Up</a>
</table>
<h1>String processing</h1>

<h2 id="regex">Module regex</h2>
<p>Regular expressions.

<dl class="code">
<dt>re(s)
<dd>Obtain a regular expression from a string representation <code>s</code>.
</dl>

<b>Type Regex, <code>r: Regex</code></b>
<dl class="code">
<dt>r.match(s)
<dd>Return true if <code>r</code> matches <code>s</code>, else false.

<dt>r.list(s)
<dd>Return the list of non-overlapping matches.

<dt>r.split(s)
<dd>Split the string <code>s</code> into parts,
using pattern <code>r</code> as a separator.

<dt>r.groups(s)
<dd>Return the list of groups if <code>r</code> matches <code>s</code>,
else <code>null</code>.

<dt>r.replace(s,f)
<dd>Replace every non-overlapping match <code>x</code> with <code>f(x)</code>.
</dl>

<h2 id="split">Module string.split</h2>
<p>Split strings into parts.

<h3>Extension of String, s: String</h3>
<dl class="code">
<dt>s.words(), s.words(regex)
<dd>Filter words out of a string.

<dt>s.split(), s.split(sep)
<dd>Split a string into parts separated by characters in the
string <code>sep</code>.
</dl>

<p>Examples:
<pre class="moss indent">
uniq = |a| set(a).sort()
text = read("input.txt")

a = uniq(text.words().map(|s| s.lower()))

lines = text.split("\n")

a = "1, 12, 3, 04".words("[0-9]+").map(int)

a = "1, 12, 3, 04".split(",\s").map(int)
</pre>


</body>
</html>

