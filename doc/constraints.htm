<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Constraints</title>
  <link rel="stylesheet" href="css/main.css">
</head>
<body>

<table class="navigation">
<tr><td><b>&uarr;</b> <a href="../home.htm">Home</a>
</table>
<h2>Development driven by constraints</h2>

<ol>
<li>Positional arguments should not be callable as named
  arguments. This would make an argument's name a
  part of the public interface. Changing the name afterwards would
  thus be a breaking change.
<li>The order of named arguments should not matter.
<li>Named arguments and dictionaries should be unified.
<li>Private global variables should be possible.
<li>Private class and object fields should be possible.
<li>Destructors should be possible.
<li>The function <code>type(x)</code> should return <code>null</code>
  in case <code>x</code> has no type. Otherwise it cannot be used
  for type guards in general. For the same reason, <code>x: T</code>
  should return false for every object <code>T</code> if <code>x</code>
  does not implement the operation.
</ol>

</body>
</html>

